class Solution:
	def maxArea(self, test_map,m_TestPoint):
		import collections
		test_map = list(test_map)
		for i in range(len(test_map)):
			test_map[i] = list(test_map[i])
		max_area = 0
		index = 2
		max_index = 2
		xlength, ylength = len(test_map), len(test_map[0])

		for i in range(len(test_map)):
			for j in range(len(test_map[0])):
				if test_map[i][j] == 0:
					#双端队列
					dq = collections.deque()
					dq.append((i, j))
					index=index+1
					test_map[i][j] = index
					area = 0
					while dq:
						area += 1
						dq_i, dq_j = dq.popleft()
						for d_i, d_j in ((dq_i - 1, dq_j), (dq_i + 1, dq_j), (dq_i, dq_j - 1), (dq_i, dq_j + 1)):
							if 0 <= d_i < xlength and 0 <= d_j < ylength and test_map[d_i][d_j] == 0:
								test_map[d_i][d_j] = index
								dq.append((d_i, d_j))

					if area>max_area:
						max_area=area
						max_index=index
		# for x in range(xlength):
		#	 print()
		#	 for y in range(ylength):
		#		 print(test_map[x][y], end=" ")
		ans = []
		# print(max_index)
		for i in m_TestPoint:
			if i[0] >= 0 and i[0] <= xlength and i[1] >= 0 and i[1] <= ylength:
				if test_map[i[0]][i[1]] == max_index:
					ans.append(i)

		return ans